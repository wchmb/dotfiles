# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    # See https://github.com/FelixKratz/JankyBorders/wiki/Man-Page
    # IMPORTANT! Turning on hidpi will drastically increase memory usage: https://github.com/FelixKratz/JankyBorders/issues/54
    'exec-and-forget borders active_color="glow(0x80ed78aa)" inactive_color=0x1a000000 hidpi=off width=2.5'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = [{ monitor.built-in = 4 }, 5]
    inner.vertical =   [{ monitor.built-in = 4 }, 5]
    outer.left =       [{ monitor.built-in = 5 }, 6]
    outer.bottom =     [{ monitor.built-in = 5 }, 6]
    outer.top =        [{ monitor.built-in = 5 }, 6]
    outer.right =      [{ monitor.built-in = 5 }, 6]

# Assign workspaces to monitor
# See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
# Note: move-workspace-to-monitor has no effect for workspaces that have monitor assignment
[workspace-to-monitor-force-assignment]
    '1-Main'   = ['built-in', 'main']
    '2-Comms'  = ['built-in', 'main']
    '3-System' = ['built-in', 'main']
    '4'        = ['built-in', 'main']
    '5'        = ['built-in', 'main']
    '6'        = ['built-in', 'main']
    '7'        = ['secondary', 'built-in']
    '8'        = ['secondary', 'built-in']
    '9-Browse' = ['secondary', 'built-in']
    '0-Code'   = ['secondary', 'built-in']

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
    #                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
    alt-enter = '''exec-and-forget osascript -e '
    tell application "Terminal"
        do script
        activate
    end tell'
    '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # Toggle full screen current window
    alt-f = 'fullscreen --no-outer-gaps'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-h = 'focus --boundaries-action wrap-around-the-workspace left'
    alt-j = 'focus --boundaries-action wrap-around-the-workspace down'
    alt-k = 'focus --boundaries-action wrap-around-the-workspace up'
    alt-l = 'focus --boundaries-action wrap-around-the-workspace right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    alt-shift-minus = 'resize smart -50'
    alt-shift-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-1 = 'workspace 1-Main'
    alt-2 = 'workspace 2-Comms'
    alt-3 = 'workspace 3-System'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9-Browse'
    alt-0 = 'workspace 0-Code'
    # alt-q = 'workspace ●○○○'
    # alt-w = 'workspace ○●○○'
    # alt-e = 'workspace ○○●○'
    # alt-r = 'workspace ○○○●'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    alt-p    = 'workspace --wrap-around prev'
    alt-n    = 'workspace --wrap-around next'
    alt-up   = 'workspace --wrap-around prev' # with arrows
    alt-down = 'workspace --wrap-around next'
    alt-tab = 'workspace-back-and-forth'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-shift-h = 'move left'
    alt-shift-j = 'move down'
    alt-shift-k = 'move up'
    alt-shift-l = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = 'move-node-to-workspace 1-Main'
    alt-shift-2 = 'move-node-to-workspace 2-Comms'
    alt-shift-3 = 'move-node-to-workspace 3-System'
    alt-shift-4 = 'move-node-to-workspace 4'
    alt-shift-5 = 'move-node-to-workspace 5'
    alt-shift-6 = 'move-node-to-workspace 6'
    alt-shift-7 = 'move-node-to-workspace 7'
    alt-shift-8 = 'move-node-to-workspace 8'
    alt-shift-9 = 'move-node-to-workspace 9-Browse'
    alt-shift-0 = 'move-node-to-workspace 0-Code'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-monitor
    alt-shift-left = 'move-node-to-monitor --focus-follows-window prev' # with arrows: like Win
    alt-shift-right = 'move-node-to-monitor --focus-follows-window next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    # Note: move-workspace-to-monitor has no effect if [workspace-to-monitor-force-assignment]
    alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
    # See: https://nikitabobko.github.io/AeroSpace/commands#mode


    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']
    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

    # down = 'volume down'
    # up = 'volume up'
    # shift-down = ['volume set 0', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/guide#callbacks
# Get app-id with: aerospace list-apps
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace 1-Main'

[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'move-node-to-workspace 1-Main'

[[on-window-detected]]
if.app-id = 'org.apple.mail'
run = 'move-node-to-workspace 2-Comms'

[[on-window-detected]]
if.app-name-regex-substring = 'Messages'
run = ['move-node-to-workspace 2-Comms']

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = ['move-node-to-workspace 2-Comms']

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['move-node-to-workspace 2-Comms']

[[on-window-detected]]
if.app-name-regex-substring = 'FastS3'
run = ['move-node-to-workspace 2-Comms']

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = ['move-node-to-workspace 3-System']

[[on-window-detected]]
if.app-id = 'com.apple.shortcuts'
run = ['move-node-to-workspace 3-System']

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace 9-Browse'

[[on-window-detected]]
if.app-id = 'org.gnu.Emacs'
run = 'move-node-to-workspace 0-Code'

[[on-window-detected]]
if.app-name-regex-substring = 'AI Studio'
run = ['move-node-to-workspace 0-Code']

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.objective-see.lulu.app'
run = 'layout floating'
